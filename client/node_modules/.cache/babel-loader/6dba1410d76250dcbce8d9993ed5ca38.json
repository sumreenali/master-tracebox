{"ast":null,"code":"var _jsxFileName = \"D:\\\\fyp sumreen\\\\master-tracebox\\\\client\\\\src\\\\Components\\\\Product\\\\ProductModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, MOdalody, Form, FormGroup, Label, Input, Col, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addProduct } from '../../actons/productActons';\n\nclass ProductModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      image: '',\n      name: '',\n      description: '',\n      price: 0,\n      quantity: 0,\n      date: '',\n      status: false\n    };\n\n    this.Handletoggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value,\n        [e.target.description]: e.target.description,\n        [e.target.price]: e.target.price,\n        [e.target.quantity]: e.target.quantity,\n        [e.target.status]: e.target.status,\n        [e.target.date]: e.target.date,\n        [e.target.image]: e.target.image\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: '#32bcdb'\n      },\n      onClick: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Add Product\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add a New Product\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Enter Product Name\"), React.createElement(Input, {\n      plaintext: true,\n      value: \"Some plain text/ static value\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Product Description\"), React.createElement(Input, {\n      type: \"textarea\",\n      name: \"description\",\n      id: \"description\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Price\"), React.createElement(Input, {\n      type: \"number\",\n      name: \"price\",\n      id: \"price\",\n      placeholder: \"Enter Price\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Enter Quantity\"), React.createElement(Input, {\n      type: \"number\",\n      name: \"quantity\",\n      id: \"quantity\",\n      placeholder: \"Enter Quantity\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Date\"), React.createElement(Input, {\n      type: \"date\",\n      name: \"date\",\n      id: \"Date\",\n      placeholder: \"Enter Date\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"status\",\n      id: \"status\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Available\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Not Available\"))))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Upload Product Image\"), React.createElement(Input, {\n      type: \"file\",\n      name: \"image\",\n      id: \"image\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(FormText, {\n      color: \"muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Image size should not be more then 25 MB\"))))));\n  }\n\n}\n\nexport default connect({\n  addProduct\n})(ProductModal);","map":{"version":3,"sources":["D:/fyp sumreen/master-tracebox/client/src/Components/Product/ProductModal.js"],"names":["React","Component","Button","Modal","ModalHeader","MOdalody","Form","FormGroup","Label","Input","Col","Row","connect","addProduct","ProductModal","state","modal","image","name","description","price","quantity","date","status","Handletoggle","setState","onChange","e","target","value","render","backgroundColor","handleToggle","toggle","submit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SACIC,MADJ,EACYC,KADZ,EACmBC,WADnB,EACgCC,QADhC,EAC0CC,IAD1C,EACgDC,SADhD,EAEIC,KAFJ,EAEUC,KAFV,EAEiBC,GAFjB,EAEsBC,GAFtB,QAGO,YAHP;AAKA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,4BAA3B;;AAEA,MAAMC,YAAN,SAA2Bb,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCc,KAFiC,GAEzB;AACJC,MAAAA,KAAK,EAAE,KADH;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,WAAW,EAAC,EAJR;AAKJC,MAAAA,KAAK,EAAC,CALF;AAMJC,MAAAA,QAAQ,EAAC,CANL;AAOJC,MAAAA,IAAI,EAAC,EAPD;AAQJC,MAAAA,MAAM,EAAE;AARJ,KAFyB;;AAAA,SAajCC,YAbiC,GAalB,MAAK;AAChB,WAAKC,QAAL,CAAc;AACVT,QAAAA,KAAK,EAAG,CAAC,KAAKD,KAAL,CAAWC;AADV,OAAd;AAGH,KAjBgC;;AAAA,SAmBjCU,QAnBiC,GAmBtBC,CAAC,IAAG;AACX,WAAKF,QAAL,CAAc;AACV,SAACE,CAAC,CAACC,MAAF,CAASV,IAAV,GAAiBS,CAAC,CAACC,MAAF,CAASC,KADhB;AAEV,SAACF,CAAC,CAACC,MAAF,CAAST,WAAV,GAAwBQ,CAAC,CAACC,MAAF,CAAST,WAFvB;AAGV,SAACQ,CAAC,CAACC,MAAF,CAASR,KAAV,GAAkBO,CAAC,CAACC,MAAF,CAASR,KAHjB;AAIV,SAACO,CAAC,CAACC,MAAF,CAASP,QAAV,GAAqBM,CAAC,CAACC,MAAF,CAASP,QAJpB;AAKV,SAACM,CAAC,CAACC,MAAF,CAASL,MAAV,GAAmBI,CAAC,CAACC,MAAF,CAASL,MALlB;AAMV,SAACI,CAAC,CAACC,MAAF,CAASN,IAAV,GAAiBK,CAAC,CAACC,MAAF,CAASN,IANhB;AAOV,SAACK,CAAC,CAACC,MAAF,CAASX,KAAV,GAAkBU,CAAC,CAACC,MAAF,CAASX;AAPjB,OAAd;AASH,KA7BgC;AAAA;;AA+BjCa,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAS,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAC;AAAjB,OAAhB;AACU,MAAA,OAAO,EAAE,KAAKC,YADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAKI,oBAAC,KAAD;AACC,MAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWC,KADpB;AAEC,MAAA,MAAM,EAAE,KAAKiB,MAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJJ,EAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,MAAhB;AAAiB,MAAA,KAAK,EAAC,+BAAvB;AACQ,MAAA,QAAQ,EAAE,KAAKR,QADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,EAQA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,aAA5B;AAA0C,MAAA,EAAE,EAAC,aAA7C;AACU,MAAA,QAAQ,EAAE,KAAKA,QADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CARA,EAcA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,EAAE,EAAC,OAHP;AAII,MAAA,WAAW,EAAC,aAJhB;AAKI,MAAA,QAAQ,EAAE,KAAKA,QALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ,EAaI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,EAAE,EAAC,UAHP;AAII,MAAA,WAAW,EAAC,gBAJhB;AAKI,MAAA,QAAQ,EAAE,KAAKA,QALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CAbJ,CAdA,EAyCA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,EAAE,EAAC,MAHP;AAII,MAAA,WAAW,EAAC,YAJhB;AAKI,MAAA,QAAQ,EAAE,KAAKA,QALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ,EAaI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAmC,MAAA,EAAE,EAAC,QAAtC;AAAiD,MAAA,QAAQ,EAAE,KAAKA,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CAFJ,CADA,CAbJ,CAzCA,EAiEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,EAAE,EAAC,OAAnC;AAA6C,MAAA,QAAQ,EAAE,KAAKA,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAHJ,CAjEJ,CADJ,CAPJ,CALJ,CADJ;AA2FH;;AA3HgC;;AA+HrC,eAAed,OAAO,CAAC;AAACC,EAAAA;AAAD,CAAD,CAAP,CAAsBC,YAAtB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport{\r\n    Button, Modal, ModalHeader, MOdalody, Form, FormGroup,\r\n    Label,Input, Col, Row\r\n} from 'reactstrap';\r\n\r\nimport {connect} from 'react-redux';\r\nimport { addProduct } from '../../actons/productActons';\r\n\r\nclass ProductModal extends Component {\r\n\r\n    state = {\r\n        modal: false,\r\n        image: '',\r\n        name: '',\r\n        description:'',\r\n        price:0,\r\n        quantity:0,\r\n        date:'',\r\n        status: false\r\n    }\r\n\r\n    Handletoggle = () =>{\r\n        this.setState({\r\n            modal:  !this.state.modal\r\n        });\r\n    }\r\n\r\n    onChange = e =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            [e.target.description]: e.target.description,\r\n            [e.target.price]: e.target.price,\r\n            [e.target.quantity]: e.target.quantity,\r\n            [e.target.status]: e.target.status,\r\n            [e.target.date]: e.target.date,\r\n            [e.target.image]: e.target.image\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button  style={{backgroundColor:'#32bcdb'}}\r\n                          onClick={this.handleToggle}  >\r\n                    Add Product\r\n                </Button>\r\n                <Modal\r\n                 isOpen={this.state.modal}\r\n                 toggle={this.toggle}\r\n                >\r\n                    <ModalHeader toggle={this.toggle}> \r\n                        Add a New Product\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.submit}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Enter Product Name</Label>\r\n                            <Input plaintext value=\"Some plain text/ static value\"\r\n                                    onChange={this.onChange}\r\n                             />\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup>\r\n                            <Label for=\"description\">Product Description</Label>\r\n                            <Input type=\"textarea\" name=\"description\" id=\"description\"\r\n                                      onChange={this.onChange}\r\n                             />\r\n                        </FormGroup>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <FormGroup>\r\n                                    <Label for=\"price\">Price</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"price\"\r\n                                        id=\"price\"\r\n                                        placeholder=\"Enter Price\"\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <FormGroup>\r\n                                    <Label for=\"quantity\">Enter Quantity</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"quantity\"\r\n                                        id=\"quantity\"\r\n                                        placeholder=\"Enter Quantity\"\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <FormGroup>\r\n                                    <Label for=\"Date\">Date</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"date\"\r\n                                        id=\"Date\"\r\n                                        placeholder=\"Enter Date\"\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleSelect\">Status</Label>\r\n                                <Input type=\"select\" name=\"status\" id=\"status\"   onChange={this.onChange}>\r\n                                    <option>Available</option>\r\n                                    <option>Not Available</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"image\">Upload Product Image</Label>\r\n                                <Input type=\"file\" name=\"image\" id=\"image\"   onChange={this.onChange} />\r\n                                <FormText color=\"muted\">\r\n                                    Image size should not be more then 25 MB\r\n                                </FormText>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default connect({addProduct})(ProductModal);"]},"metadata":{},"sourceType":"module"}